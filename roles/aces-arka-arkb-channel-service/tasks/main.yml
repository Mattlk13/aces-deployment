---
- name: "Install {{ app_service_name }} database"
  import_role:
    name: database
  vars:
    database_host: database_host
    database_port: database_port
    database_name: database_name
    database_user: database_user
    database_password: database_password
  when: use_local_database == true

- name: "Ensure /etc/opt/{{ app_service_name }}/ dir exists"
  file:
    path: "/etc/opt/{{ app_service_name }}"
    state: directory

- name: "Install {{ app_service_name }} arka network config"
  copy:
    src: "{{ arka_network_config_file }}"
    dest: "/etc/opt/{{ app_service_name }}/arka-network.yml"

- name: "Install {{ app_service_name }} arkb network config"
  copy:
    src: "{{ arka_network_config_file }}"
    dest: "/etc/opt/{{ app_service_name }}/arkb-network.yml"
    
- name: "Install {{ app_service_name }} application config"
  template:
    src: "application.yml.j2"
    dest: "/etc/opt/{{ app_service_name }}/application.yml"
 
- name: "Install {{ app_service_name }} application"
  import_role:
    name: "spring-boot-app"
  vars:
    jar_name: "arka_arkb_channel_service-1.1.0.jar"
    app_port: app_port
    expose_port: expose_port
    app_service_name: app_service_name

- name: "Install nginx local proxy for {{ app_service_name }}"
  include_role:
    name: nginx-proxy-local
  vars:
    domain_name: domain_name
    app_port: app_port
  when: (install_nginx_proxy and use_letsencrypt == false)
 
- name: "Install nginx letsencrypt proxy for {{ app_service_name }}"
  include_role:
    name: nginx-proxy-letsencrypt
  vars:
    domain_name: domain_name
    letsencrypt_email: letsencrypt_email
    app_port: app_port
  when: (install_nginx_proxy and use_letsencrypt == true)
