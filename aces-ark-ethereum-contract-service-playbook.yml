---
- import_playbook: setup-playbook.yml
- hosts: aces-node
  become: true
  roles:
    - role: aces-common
    
    - role: ethereum
      ethereum_data_directory: /var/ethereum
      type: testnet-rinkeby
    
    - role: aces-listener-ark
      app_port: 9091
      ark_network_config_file: configs/ark-networks/ark-mainnet.yml
      app_service_name: aces-listener-ark
    
    - role: aces-ark-ethereum-contract-service
      app_port: 9190
      expose_port: false
      use_local_database: true
      database_host: localhost
      database_port: 5432
      database_name: aces_ark_ethereum_contract_service_db
      database_user: aces_ark_ethereum_contract_service_user
      database_password: change_me
      install_nginx_proxy: true
      domain_name: ark-ethereum-contract-service.example.com
      use_letsencrypt: false
      ark_network_config_file: configs/ark-mainnet.yml
      app_service_name: aces-ark-ethereum-contract-service
      app_name: Aces Ark Ethereum Contract Service
      app_description: ACES Ark Ethereum Contract Service for deploying smart contracts
      app_website: https://arkaces.com
      ark_listener_url: http://localhost:9091
      ethereum_rcp_url: http://127.0.0.1:8545
      service_eth_address: change_me
      service_eth_passphrase: change_me
      service_ark_address: change_me
      service_ark_passphrase: change_me
      flat_fee: 0
      percent_fee: 0
      instructions: |
        With this service, users are able to deploy Ethereum code contracts directly to the
        Ethereum network using Ark. Users supply compiled solidity contract code to the service
        and pay for deployment using an Ark wallet.
      
        Ethereum contract code and ABI interface can be obtained by compiling solidity code.
        If you are new to ethereum smart contracts, you can use the [Remix Solidity Web Compiler](https://remix.ethereum.org/)
        to obtain the required values for this service:
      
        * Enter the desired solidity code in the IDE editor window.
        * Choose "Contract details (bytecode, interface etc.)" to expand compiled information.
        * Copy bytecode and ABI interface JSON into the inputs below.
        * If contract has constructor parameters, enter them below in a JSON array.
